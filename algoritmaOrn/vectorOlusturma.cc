/*

ğŸ“Œ Plan: Kendi Vector SÄ±nÄ±fÄ±mÄ±zÄ± Yazmak

AmacÄ± anlamak â†’ Vector nedir, neden kullanÄ±lÄ±r?

Normal array sabit boyutlu.

Vector ise dinamik: kapasitesi yetmezse yeni bir alan aÃ§ar, eski elemanlarÄ± kopyalar, kapasiteyi bÃ¼yÃ¼tÃ¼r.

Temel YapÄ±

class MyVector oluÅŸturacaÄŸÄ±z.

Ä°Ã§inde ÅŸu 3 Ã¶nemli ÅŸey olacak:

int* data; â†’ ElemanlarÄ± tuttuÄŸumuz dinamik array.

int size; â†’ KaÃ§ eleman var?

int capacity; â†’ Bellekte ne kadar yer ayrÄ±ldÄ±?

Temel Fonksiyonlar

push_back(int value) â†’ sona eleman ekle

pop_back() â†’ sondaki elemanÄ± sil

operator[] â†’ indeks ile eriÅŸim

size() ve capacity() fonksiyonlarÄ±

Dinamik BÃ¼yÃ¼me MekanizmasÄ±

Kapasite dolarsa 2 * capacity olacak ÅŸekilde yeni array aÃ§Ä±p kopyalama yapacaÄŸÄ±z.

Ekstra Fonksiyonlar (opsiyonel, ileri seviye)

clear()

resize(n)

insert(index, value)

erase(index)
*/

#include <iostream>
using namespace std;

class MyVector
{
private:
    int *data; // elemanlari tutacagim dinamik arrayim
    int _size;
    int _capacity;

public:
    MyVector()
    {
        data = new int[1];
        _size = 0;
        _capacity = 1;
    };

    int size() const
    {
        return _size;
    };

    int capacity() const
    {
        return _capacity;
    };
};
